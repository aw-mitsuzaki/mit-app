(()=>{var e={};e.id=948,e.ids=[948],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6126:(e,r,t)=>{"use strict";t.d(r,{GB:()=>o});let s=require("sqlite3"),a=new(t.n(s)()).Database("./database/db.sqlite",e=>{e?console.error("Failed to connect to database:",e.message):console.log("Connected to SQLite database.")});function o(e,r=[]){return new Promise((t,s)=>{a.all(e,r,(e,r)=>{e?s(Error(`SQLite Error: ${e.message}`)):t(r)})})}},6487:()=>{},7411:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>c,serverHooks:()=>m,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>g});var s={};t.r(s),t.d(s,{GET:()=>u,POST:()=>d});var a=t(6559),o=t(8088),n=t(7719),i=t(2190),p=t(6126);async function u(){try{let e=await (0,p.GB)("SELECT * FROM password_manager ORDER BY category, site_name");return i.NextResponse.json(e)}catch(e){return console.error("Error fetching password_manager:",e),i.NextResponse.json({error:"Failed to fetch diaries."},{status:500})}}async function d(e){try{let{category:r,site_name:t,site_url:s,login_id:a,password:o,email:n,memo:u}=await e.json();if(!t||!s||!o)return i.NextResponse.json({error:"Title and content are required."},{status:400});return await (0,p.GB)("INSERT INTO password_manager (category, site_name, site_url, login_id, password, email, memo) VALUES (?, ?, ?, ?, ?, ?, ? )",[r,t,s,a,o,n,u]),i.NextResponse.json({message:"password_manager entry created successfully."})}catch(e){return console.error("Error creating password_manager entry:",e),i.NextResponse.json({error:"Failed to create diary entry."},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/passwords/route",pathname:"/api/passwords",filename:"route",bundlePath:"app/api/passwords/route"},resolvedPagePath:"/usr/src/app/src/app/api/passwords/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:g,serverHooks:m}=c;function x(){return(0,n.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:g})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[447,580],()=>t(7411));module.exports=s})();