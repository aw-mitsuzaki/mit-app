(()=>{var e={};e.id=459,e.ids=[459],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4519:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>f,routeModule:()=>c,serverHooks:()=>x,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>y});var s={};t.r(s),t.d(s,{GET:()=>d,PUT:()=>p});var a=t(6559),n=t(8088),o=t(7719),i=t(2190),u=t(6126);async function d(e,{params:r}){let t=(await r).id;if(!t||isNaN(Number(t)))return i.NextResponse.json({error:"Invalid diary ID."},{status:400});try{let e=await (0,u.GB)("SELECT * FROM diary WHERE id = ?",[t]);if(!e||0===e.length)return i.NextResponse.json({error:"Diary entry not found."},{status:404});return i.NextResponse.json(e[0])}catch(e){return console.error("Error fetching diary entry:",e),i.NextResponse.json({error:"Failed to fetch diary entry."},{status:500})}}async function p(e,{params:r}){let t=(await r).id;try{let{title:r,content:s}=await e.json();if(!r||!s)return i.NextResponse.json({error:"Title and content are required."},{status:400});if(!await (0,u.GB)("UPDATE diary SET title = ?, content = ? WHERE id = ?",[r,s,t]))return i.NextResponse.json({error:"Diary entry not found or no changes made."},{status:404});return i.NextResponse.json({message:"Diary entry updated successfully."})}catch(e){return console.error("Error updating diary entry:",e),i.NextResponse.json({error:"Failed to update diary entry."},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/diaries/[id]/route",pathname:"/api/diaries/[id]",filename:"route",bundlePath:"app/api/diaries/[id]/route"},resolvedPagePath:"/usr/src/app/src/app/api/diaries/[id]/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:y,serverHooks:x}=c;function f(){return(0,o.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:y})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6126:(e,r,t)=>{"use strict";t.d(r,{GB:()=>n});let s=require("sqlite3"),a=new(t.n(s)()).Database("./database/db.sqlite",e=>{e?console.error("Failed to connect to database:",e.message):console.log("Connected to SQLite database.")});function n(e,r=[]){return new Promise((t,s)=>{a.all(e,r,(e,r)=>{e?s(Error(`SQLite Error: ${e.message}`)):t(r)})})}},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[447,580],()=>t(4519));module.exports=s})();