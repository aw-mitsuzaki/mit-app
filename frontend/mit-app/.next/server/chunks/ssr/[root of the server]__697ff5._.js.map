{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/app/components/DiaryCard/DiaryCard.tsx"],"sourcesContent":["type Diary = {\n  id: number;\n  title: string;\n  content: string;\n  created_at: string;\n};\n\nconst DiaryCard = ({ diary }: { diary: Diary }) => {\n  return (\n    <div className=\"bg-white border p-4 rounded shadow-md w-full sm:w-1/2 lg:w-1/3\">\n      <h2 className=\"text-lg font-bold\">{diary.title}</h2>\n      <p className=\"text-gray-700 mt-2\">{diary.content}</p>\n      <p className=\"text-sm text-gray-500 mt-4\">{new Date(diary.created_at).toLocaleString()}</p>\n    </div>\n  );\n};\n\nexport default DiaryCard;\n"],"names":[],"mappings":";;;;;AAOA,MAAM,YAAY,CAAC,EAAE,KAAK,EAAoB;IAC5C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqB,MAAM,KAAK;;;;;;0BAC9C,8OAAC;gBAAE,WAAU;0BAAsB,MAAM,OAAO;;;;;;0BAChD,8OAAC;gBAAE,WAAU;0BAA8B,IAAI,KAAK,MAAM,UAAU,EAAE,cAAc;;;;;;;;;;;;AAG1F;uCAEe"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/lib/db.ts"],"sourcesContent":["const sqlite3 = require('sqlite3').verbose();\n\nconst DATABASE_PATH = './database/db.sqlite';\n\nexport const db = new sqlite3.Database(DATABASE_PATH, (err) => {\n    if (err) {\n        console.error('Failed to connect to database:', err.message);\n    } else {\n        console.log('Connected to SQLite database.');\n    }\n});\n\nexport function runQuery(query: string, params: any[] = []): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n        db.all(query, params, (err, rows) => {\n            if (err) {\n                reject(new Error(`SQLite Error: ${err.message}`));\n            } else {\n                resolve(rows);\n            }\n        });\n    });\n}\n\nexport function getQuery(query: string, params: any[] = []): Promise<any> {\n    return new Promise((resolve, reject) => {\n        db.get(query, params, (err, row) => {\n            if (err) {\n                reject(new Error(`SQLite Error: ${err.message}`));\n            } else {\n                resolve(row);\n            }\n        });\n    });\n}\n\nexport function allQuery(query: string, params: any[] = []): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n        db.all(query, params, (err, rows) => {\n            if (err) {\n                reject(new Error(`SQLite Error: ${err.message}`));\n            } else {\n                resolve(rows);\n            }\n        });\n    });\n}\n\nexport function closeDatabase(): Promise<void> {\n    return new Promise((resolve, reject) => {\n        db.close((err) => {\n            if (err) {\n                reject(new Error(`Failed to close the database: ${err.message}`));\n            } else {\n                resolve();\n            }\n        });\n    });\n}\n"],"names":[],"mappings":";;;;;;;AAAA,MAAM,UAAU,gEAAmB,OAAO;AAE1C,MAAM,gBAAgB;AAEf,MAAM,KAAK,IAAI,QAAQ,QAAQ,CAAC,eAAe,CAAC;IACnD,IAAI,KAAK;QACL,QAAQ,KAAK,CAAC,kCAAkC,IAAI,OAAO;IAC/D,OAAO;QACH,QAAQ,GAAG,CAAC;IAChB;AACJ;AAEO,SAAS,SAAS,KAAa,EAAE,SAAgB,EAAE;IACtD,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK;YACxB,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,OAAO,EAAE;YACnD,OAAO;gBACH,QAAQ;YACZ;QACJ;IACJ;AACJ;AAEO,SAAS,SAAS,KAAa,EAAE,SAAgB,EAAE;IACtD,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK;YACxB,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,OAAO,EAAE;YACnD,OAAO;gBACH,QAAQ;YACZ;QACJ;IACJ;AACJ;AAEO,SAAS,SAAS,KAAa,EAAE,SAAgB,EAAE;IACtD,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK;YACxB,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,OAAO,EAAE;YACnD,OAAO;gBACH,QAAQ;YACZ;QACJ;IACJ;AACJ;AAEO,SAAS;IACZ,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,KAAK,CAAC,CAAC;YACN,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,8BAA8B,EAAE,IAAI,OAAO,EAAE;YACnE,OAAO;gBACH;YACJ;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/app/%28main%29/page.tsx"],"sourcesContent":["import Link from 'next/link';\nimport DiaryCard from '../components/DiaryCard/DiaryCard';\nimport { runQuery } from '../../lib/db';\n\nconst MainPage = async () => {\n  let diaries = [];\n  try {\n    // データベースからデータを取得し、プレーンオブジェクトに変換\n    const rawDiaries = await runQuery('SELECT * FROM diary');\n    console.log(rawDiaries);\n\n    diaries = rawDiaries.map((diary: any) => ({\n      id: diary.id,\n      title: diary.title,\n      content: diary.content,\n      created_at: diary.created_at,\n    }));\n  } catch (error) {\n    console.error('Error fetching diaries:', error);\n  }\n\n  return (\n    <div className=\"p-3\">\n      <header className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold flex items-center\">日報</h1>\n        <Link href=\"/diary/new\" className=\"flex items-center gap-1 font-semibold text-blue-500 hover:text-blue-700\">\n          new\n        </Link>\n      </header>\n      <div className=\"mt-8 flex flex-wrap gap-4\">\n        {diaries.map((diary) => (\n          <DiaryCard key={diary.id} diary={diary} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,WAAW;IACf,IAAI,UAAU,EAAE;IAChB,IAAI;QACF,gCAAgC;QAChC,MAAM,aAAa,MAAM,CAAA,GAAA,gHAAA,CAAA,WAAQ,AAAD,EAAE;QAClC,QAAQ,GAAG,CAAC;QAEZ,UAAU,WAAW,GAAG,CAAC,CAAC,QAAe,CAAC;gBACxC,IAAI,MAAM,EAAE;gBACZ,OAAO,MAAM,KAAK;gBAClB,SAAS,MAAM,OAAO;gBACtB,YAAY,MAAM,UAAU;YAC9B,CAAC;IACH,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;IAC3C;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,8OAAC,4HAAA,CAAA,UAAI;wBAAC,MAAK;wBAAa,WAAU;kCAA0E;;;;;;;;;;;;0BAI9G,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,sBACZ,8OAAC,mJAAA,CAAA,UAAS;wBAAgB,OAAO;uBAAjB,MAAM,EAAE;;;;;;;;;;;;;;;;AAKlC;uCAEe"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAX9B,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAjBtB,SAASH,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AA4BpI,OAAO,MAAMM,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA,GAAU;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;sBACVC,OAAAA;oBAAAA,EAAU,EAAE;oBAAA;iBAAA;;WACd;;KACAC,UAAU;cACRC,IAAAA;YAAAA,GAAYnB,GAAAA;gBACd,OAAA,QAAA;wBAAA;4BACA,KAAA,CAAA,GAAA,2KAAA,CAAA,sBAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA","ignoreList":[0]}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}