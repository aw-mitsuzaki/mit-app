{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/app/components/DiaryCard.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport { useMemo } from 'react';\n\ntype Diary = {\n  id: number;\n  title: string;\n  content: string;\n  created_at: string;\n};\n\nconst DiaryCard = ({ diary }: { diary: Diary }) => {\n  const router = useRouter();\n\n  // useMemoを使って、日付フォーマットの計算を最適化\n  const formattedDate = useMemo(() => {\n    const date = new Date(diary.created_at);\n    return date.toLocaleString();\n  }, [diary.created_at]);\n\n  const handleUpdate = () => {\n    router.push(`/diaries/edit/${diary.id}`);\n  };\n\n  return (\n    <div className=\"bg-white border p-4 rounded shadow-md w-full\">\n      <h2 className=\"text-lg font-bold truncate\" title={diary.title}>\n        {diary.title}\n      </h2>\n      <p className=\"text-gray-700 mt-2 line-clamp-3\" title={diary.content}>\n        {diary.content}\n      </p>\n      <p className=\"text-sm text-gray-500 mt-4\">{formattedDate}</p>\n      <div className=\"flex justify-end mt-4 space-x-2\">\n        <button\n          onClick={handleUpdate}\n          className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\"\n        >\n          更新\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryCard;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYA,MAAM,YAAY,CAAC,EAAE,KAAK,EAAoB;IAC5C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,8BAA8B;IAC9B,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC5B,MAAM,OAAO,IAAI,KAAK,MAAM,UAAU;QACtC,OAAO,KAAK,cAAc;IAC5B,GAAG;QAAC,MAAM,UAAU;KAAC;IAErB,MAAM,eAAe;QACnB,OAAO,IAAI,CAAC,CAAC,cAAc,EAAE,MAAM,EAAE,EAAE;IACzC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;gBAA6B,OAAO,MAAM,KAAK;0BAC1D,MAAM,KAAK;;;;;;0BAEd,8OAAC;gBAAE,WAAU;gBAAkC,OAAO,MAAM,OAAO;0BAChE,MAAM,OAAO;;;;;;0BAEhB,8OAAC;gBAAE,WAAU;0BAA8B;;;;;;0BAC3C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;uCAEe"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/app/diaries/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport WikiCard from '../components/DiaryCard';\n\ntype Diary = {\n    id: number;\n    title: string;\n    content: string;\n    created_at: string;\n  };\n\nconst DiaryPage = () => {\n  const [diaries, setDiaries] = useState<Diary[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState<{ diaries?: string;}>({});\n\n  const fetchData = async <T,>(url: string, setter: (data: T) => void, key: keyof typeof errors) => {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(`${key}の取得に失敗しました。`);\n      const data: T = await response.json();\n      setter(data);\n    } catch (err) {\n      console.error(`Error fetching ${key}:`, err);\n      setErrors((prev) => ({ ...prev, [key]: (err as Error).message }));\n    }\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      await Promise.all([\n        fetchData<Diary[]>('/api/diaries', setDiaries, 'diaries'),\n      ]);\n      setLoading(false);\n    };\n    loadData();\n  }, []);\n\n  if (loading) {\n    return <div>読み込み中...</div>;\n  }\n\n  return (\n    <div className=\"p-3\">\n      <header className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">日報管理</h1>\n        <div className=\"flex space-x-4\">\n          <Link\n            href=\"/wikis/new\"\n            className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded-lg shadow-md hover:bg-blue-600 active:scale-95 transition-transform\"\n          >\n            日報登録\n          </Link>\n        </div>\n      </header>\n\n      <section className=\"my-6\">\n        <h2 className=\"text-xl font-semibold\">日報一覧</h2>\n        {errors.diaries ? (\n          <p className=\"text-red-500\">{errors.diaries}</p>\n        ) : diaries.length > 0 ? (\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {diaries.map((diary) => (\n              <WikiCard key={diary.id} diary={diary} />\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-gray-500\">登録された日報がありません。</p>\n        )}\n      </section>\n\n    </div>\n  );\n};\n\nexport default DiaryPage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,YAAY;IAChB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB,CAAC;IAE5D,MAAM,YAAY,OAAW,KAAa,QAA2B;QACnE,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC;YACrD,MAAM,OAAU,MAAM,SAAS,IAAI;YACnC,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,EAAE;YACxC,UAAU,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,IAAI,EAAE,AAAC,IAAc,OAAO;gBAAC,CAAC;QACjE;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW;YACf,MAAM,QAAQ,GAAG,CAAC;gBAChB,UAAmB,gBAAgB,YAAY;aAChD;YACD,WAAW;QACb;QACA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,4HAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;;;;;;0BAML,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAwB;;;;;;oBACrC,OAAO,OAAO,iBACb,8OAAC;wBAAE,WAAU;kCAAgB,OAAO,OAAO;;;;;+BACzC,QAAQ,MAAM,GAAG,kBAEnB,8OAAC;wBAAI,WAAU;kCACZ,QAAQ,GAAG,CAAC,CAAC,sBACZ,8OAAC,sIAAA,CAAA,UAAQ;gCAAgB,OAAO;+BAAjB,MAAM,EAAE;;;;;;;;;6CAI3B,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;;AAMvC;uCAEe"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}