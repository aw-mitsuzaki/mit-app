{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/app/diaries/%5Bid%5D/page.tsx"],"sourcesContent":["import ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\ntype Diary = {\n  id: number;\n  title: string;\n  content: string;\n  created_at: string;\n};\n\n// Next.js 14以降のサーバーコンポーネント方式\nasync function getDiary(id: string): Promise<Diary> {\n  const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/diaries/${id}`, {\n    cache: 'no-store', // キャッシュ無効（リアルタイムデータ）\n  });\n\n  if (!res.ok) {\n    throw new Error('日記の取得に失敗しました');\n  }\n\n  return res.json();\n}\n\nconst DiaryDetailPage = async ({ params }: { params: { id: string } }) => {\n  const diary = await getDiary(params.id);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">{diary.title}</h1>\n      <p className=\"text-gray-500 mb-4\">\n        {new Date(diary.created_at).toLocaleString()}\n      </p>\n      <article className=\"prose max-w-none\">\n        <ReactMarkdown remarkPlugins={[remarkGfm]}>\n          {diary.content}\n        </ReactMarkdown>\n      </article>\n    </div>\n  );\n};\n\nexport default DiaryDetailPage;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASA,6BAA6B;AAC7B,eAAe,SAAS,EAAU;IAChC,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,oBAAoB,CAAC,aAAa,EAAE,IAAI,EAAE;QAC/E,OAAO;IACT;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,IAAI,IAAI;AACjB;AAEA,MAAM,kBAAkB,OAAO,EAAE,MAAM,EAA8B;IACnE,MAAM,QAAQ,MAAM,SAAS,OAAO,EAAE;IAEtC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA2B,MAAM,KAAK;;;;;;0BACpD,8OAAC;gBAAE,WAAU;0BACV,IAAI,KAAK,MAAM,UAAU,EAAE,cAAc;;;;;;0BAE5C,8OAAC;gBAAQ,WAAU;0BACjB,cAAA,8OAAC,wLAAA,CAAA,UAAa;oBAAC,eAAe;wBAAC,6IAAA,CAAA,UAAS;qBAAC;8BACtC,MAAM,OAAO;;;;;;;;;;;;;;;;;AAKxB;uCAEe"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}