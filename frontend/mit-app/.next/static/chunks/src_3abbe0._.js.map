{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/app/components/DiaryCard/DiaryCard.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport { useState, useEffect } from 'react';\n\ntype Diary = {\n  id: number;\n  title: string;\n  content: string;\n  created_at: string;\n};\n\nconst DiaryCard = ({ diary }: { diary: Diary }) => {\n  const router = useRouter();\n  const [formattedDate, setFormattedDate] = useState<string>('');\n\n  useEffect(() => {\n    const date = new Date(diary.created_at);\n    setFormattedDate(date.toLocaleString());\n  }, [diary.created_at]);\n\n  const handleUpdate = () => {\n    router.push(`/diaries/edit/${diary.id}`);\n  };\n\n  return (\n    <div className=\"bg-white border p-4 rounded shadow-md w-full\">\n      <h2 className=\"text-lg font-bold\">{diary.title}</h2>\n      <p className=\"text-gray-700 mt-2\">{diary.content}</p>\n      <p className=\"text-sm text-gray-500 mt-4\">{formattedDate}</p>\n      <div className=\"flex justify-end mt-4 space-x-2\">\n        <button\n          onClick={handleUpdate}\n          className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\n        >\n          更新\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryCard;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYA,MAAM,YAAY,CAAC,EAAE,KAAK,EAAoB;;IAC5C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE3D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,OAAO,IAAI,KAAK,MAAM,UAAU;YACtC,iBAAiB,KAAK,cAAc;QACtC;8BAAG;QAAC,MAAM,UAAU;KAAC;IAErB,MAAM,eAAe;QACnB,OAAO,IAAI,CAAC,CAAC,cAAc,EAAE,MAAM,EAAE,EAAE;IACzC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAqB,MAAM,KAAK;;;;;;0BAC9C,6LAAC;gBAAE,WAAU;0BAAsB,MAAM,OAAO;;;;;;0BAChD,6LAAC;gBAAE,WAAU;0BAA8B;;;;;;0BAC3C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;GA5BM;;QACW,qIAAA,CAAA,YAAS;;;KADpB;uCA8BS"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/lib/db.ts"],"sourcesContent":["import sqlite3 from 'sqlite3';\n\nconst DATABASE_PATH = './database/db.sqlite';\n\n// Diaryの型を定義\ntype Diary = {\n    id: number;\n    title: string;\n    content: string;\n    created_at: string; // 必要に応じてDate型に変換も可能\n};\n\n// SQLiteデータベースの接続を初期化\nexport const db = new sqlite3.Database(DATABASE_PATH, (err) => {\n    if (err) {\n        console.error('Failed to connect to database:', err.message);\n    } else {\n        console.log('Connected to SQLite database.');\n    }\n});\n\n// クエリを実行する関数\nexport function runQuery(query: string, params: (string | number)[] = []): Promise<Diary[]> {\n    return new Promise((resolve, reject) => {\n        db.all(query, params, (err, rows) => {\n            if (err) {\n                reject(new Error(`SQLite Error: ${err.message}`));\n            } else {\n                resolve(rows as Diary[]); // 明示的にDiary[]型にキャスト\n            }\n        });\n    });\n}\n\n// 単一のデータを取得する関数\nexport function getQuery(query: string, params: (string | number)[] = []): Promise<Diary | undefined> {\n    return new Promise((resolve, reject) => {\n        db.get(query, params, (err, row) => {\n            if (err) {\n                reject(new Error(`SQLite Error: ${err.message}`));\n            } else {\n                resolve(row as Diary | undefined); // 明示的に型をキャスト\n            }\n        });\n    });\n}\n\n// 全データを取得する関数\nexport function allQuery(query: string, params: (string | number)[] = []): Promise<Diary[]> {\n    return new Promise((resolve, reject) => {\n        db.all(query, params, (err, rows) => {\n            if (err) {\n                reject(new Error(`SQLite Error: ${err.message}`));\n            } else {\n                resolve(rows as Diary[]); // 明示的にDiary[]型にキャスト\n            }\n        });\n    });\n}\n\n// データベースを閉じる関数\nexport function closeDatabase(): Promise<void> {\n    return new Promise((resolve, reject) => {\n        db.close((err) => {\n            if (err) {\n                reject(new Error(`Failed to close the database: ${err.message}`));\n            } else {\n                resolve();\n            }\n        });\n    });\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,gBAAgB;AAWf,MAAM,KAAK,IAAI,4IAAA,CAAA,UAAO,CAAC,QAAQ,CAAC,eAAe,CAAC;IACnD,IAAI,KAAK;QACL,QAAQ,KAAK,CAAC,kCAAkC,IAAI,OAAO;IAC/D,OAAO;QACH,QAAQ,GAAG,CAAC;IAChB;AACJ;AAGO,SAAS,SAAS,KAAa,EAAE,SAA8B,EAAE;IACpE,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK;YACxB,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,OAAO,EAAE;YACnD,OAAO;gBACH,QAAQ,OAAkB,oBAAoB;YAClD;QACJ;IACJ;AACJ;AAGO,SAAS,SAAS,KAAa,EAAE,SAA8B,EAAE;IACpE,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK;YACxB,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,OAAO,EAAE;YACnD,OAAO;gBACH,QAAQ,MAA2B,aAAa;YACpD;QACJ;IACJ;AACJ;AAGO,SAAS,SAAS,KAAa,EAAE,SAA8B,EAAE;IACpE,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK;YACxB,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,OAAO,EAAE;YACnD,OAAO;gBACH,QAAQ,OAAkB,oBAAoB;YAClD;QACJ;IACJ;AACJ;AAGO,SAAS;IACZ,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,KAAK,CAAC,CAAC;YACN,IAAI,KAAK;gBACL,OAAO,IAAI,MAAM,CAAC,8BAA8B,EAAE,IAAI,OAAO,EAAE;YACnE,OAAO;gBACH;YACJ;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/src/app/%28main%29/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport DiaryCard from '../components/DiaryCard/DiaryCard';\n\ntype Diary = {\n  id: number;\n  title: string;\n  content: string;\n  created_at: string; // データベースの型に応じて変更\n};\n\nconst MainPage = () => {\n  const [diaries, setDiaries] = useState<Diary[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchDiaries = async () => {\n      try {\n        const response = await fetch('/api/diaries'); // APIエンドポイントにリクエスト\n        if (!response.ok) throw new Error('Failed to fetch diaries');\n\n        const data: Diary[] = await response.json();\n        setDiaries(data); // データをstateに設定\n      } catch (error) {\n        console.error('Error fetching diaries:', error);\n      } finally {\n        setLoading(false); // ローディングを終了\n      }\n    };\n\n    fetchDiaries();\n  }, []);\n\n  if (loading) {\n    return <div>読み込み中...</div>;\n  }\n\n  return (\n    <div className=\"p-3\">\n      <header className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold flex items-center\">日報</h1>\n        <Link href=\"/diaries/new\" className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded-lg shadow-md hover:bg-blue-600 hover:shadow-lg active:scale-95 transition-transform duration-200 flex items-center;\">\n          登録\n        </Link>\n      </header>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 p-4\">\n        {diaries.map((diary) => (\n          <DiaryCard key={diary.id} diary={diary} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAaA,MAAM,WAAW;;IACf,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,MAAM;mDAAe;oBACnB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM,iBAAiB,mBAAmB;wBACjE,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;wBAElC,MAAM,OAAgB,MAAM,SAAS,IAAI;wBACzC,WAAW,OAAO,eAAe;oBACnC,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,2BAA2B;oBAC3C,SAAU;wBACR,WAAW,QAAQ,YAAY;oBACjC;gBACF;;YAEA;QACF;6BAAG,EAAE;IAEL,IAAI,SAAS;QACX,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAO,WAAU;;kCAChB,6LAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,6LAAC,+HAAA,CAAA,UAAI;wBAAC,MAAK;wBAAe,WAAU;kCAAyK;;;;;;;;;;;;0BAI/M,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,sBACZ,6LAAC,sJAAA,CAAA,UAAS;wBAAgB,OAAO;uBAAjB,MAAM,EAAE;;;;;;;;;;;;;;;;AAKlC;GAzCM;KAAA;uCA2CS"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}